# copied from 
# https://github.com/melscoop-test/check/blob/7d4cc42172d877092fb6e40bbea5d785743edd40/tests/cloudformation/checks/resource/aws/example_LambdaEnvironmentCredentials/LambdaEnvironmentCredentials.yaml#L15
# this file contains 3 JS snippets: 2 in single line strings in block literal format, the other in unsupported format
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  AssetsS3Bucket:
    Type: String
  AssetsS3Prefix:
    Type: String
Resources:
  SubRole45U335Z4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  FuncPlainAX4C4WBG:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handle = async () => "Hello, World!";
      Handler: index.handle
      Role: !GetAtt SubRole45U335Z4.Arn
      Runtime: nodejs12.x
  FuncZipCYI6F352:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref 'AssetsS3Bucket'
        S3Key: !Sub ${AssetsS3Prefix}64b9df3b7f85f000aca4b3297957613a5629e6ab
      Handler: handler.handle
      Role: !GetAtt SubRole45U335Z4.Arn
      Runtime: nodejs12.x
  SideRoleR6IRXJPT:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  SideFuncPlainR7HTZ65U:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handle = async () => "Hello, World! (from sidecar)";
      Handler: index.handle
      Role: !GetAtt SideRoleR6IRXJPT.Arn
      Runtime: nodejs12.x
  SideFuncZipASOCLY3E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref 'AssetsS3Bucket'
        S3Key: !Sub ${AssetsS3Prefix}66c3b02bfc8b38831fcec495df73b87f1cc28965
      Handler: handler.handle
      Role: !GetAtt SideRoleR6IRXJPT.Arn
      Runtime: nodejs12.x
    DependsOn:
    - SideFuncPlainR7HTZ65U
    - SideRoleR6IRXJPT
  FuncSide7XAPBEE5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: !Join
        - inside
        - !Split
          - sidecar
          - |
            exports.handle = async () => "Hello, World! (from sidecar)";
      Handler: index.handle
      Role: !GetAtt SubRole45U335Z4.Arn
      Runtime: nodejs12.x
Outputs:
  AssetUri:
    Value: !Sub s3://${AssetsS3Bucket}/${AssetsS3Prefix}64b9df3b7f85f000aca4b3297957613a5629e6ab
  AssetUrl:
    Value: !Sub https://${AssetsS3Bucket}.s3.amazonaws.com/${AssetsS3Prefix}64b9df3b7f85f000aca4b3297957613a5629e6ab
